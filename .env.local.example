# --- App Base Config ---
NEXT_PUBLIC_SITE_URL=https://sabidzpro.is-a.dev
NODE_ENV=production

# --- Database Configuration (Prisma Postgres) ---
# Get this from your Vercel dashboard -> Storage -> Prisma Postgres -> Connect
POSTGRES_PRISMA_URL=""

# --- NextAuth.js Configuration (GitHub OAuth) ---
# Create GitHub OAuth App: https://github.com/settings/applications/new
# Callback URL: http://localhost:3000/api/auth/callback/github (development)
# Callback URL: https://your-domain.com/api/auth/callback/github (production)
AUTH_SECRET="your-secret-key-here"
AUTH_GITHUB_ID="your-github-oauth-client-id"
AUTH_GITHUB_SECRET="your-github-oauth-client-secret"

# --- Vercel Blob Storage (for image uploads) ---
# Get this from Vercel dashboard -> Storage -> Blob
BLOB_READ_WRITE_TOKEN="your-vercel-blob-token"

# --- Google Maps API Key ---
# Required for /api/maps proxy to fetch Google Maps JS
# Never commit real key; copy this file to .env and set value
GOOGLE_MAPS_API_KEY=YOUR_GOOGLE_MAPS_API_KEY

# --- Setup Instructions for Prisma Postgres ---
# 1. Create Prisma Postgres database in Vercel Dashboard
# 2. Copy POSTGRES_PRISMA_URL from Vercel -> Storage -> Prisma Postgres -> Connect
# 3. Run: npm install
# 4. Run: npx prisma generate
# 5. Run: npx prisma db push (creates tables)
# 6. Run: npm run db:seed (inserts sample data)
# 7. Create GitHub OAuth App and set credentials
# 8. Configure Vercel Blob for image uploads
# 9. Access admin panel at: /rokok-win-filter-bos